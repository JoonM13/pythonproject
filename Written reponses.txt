Juan: During the process of the python project, I was missing for the beginning of the project. On the first Friday we began, I was home sick with a fever so I missed out on the first day. However, when I came on Sunday, my partner had began with a concept and he had a barebones system of a bank working. It was glitchy, so I stepped in and fixed up many of the bugs with my partner. Furthermore, we had an error in our withdrawal and deposit functions that crashed the system whenever someone would enter a string value because the input had to be interpreted as a float in order to do the banking calculations and to use cents after dollars. To fix this, I did some research and introduced a new method we hadn’t learned, blocks called “try” and “except” that check for errors after running a line of code, and runs a special line of code if an error is encountered. This solved our crashing error, and from then on out I fixed the withdraw and deposit functions and the program was working correctly. After that, my partner added some extra functions to the program to add extra accounts to transfer money between them, and our project was finished.


Gabriel: This is a collaborative project. We started by making a main function, put a loop to check for some stuff, and then we reached the final product. We had to do some research in order to complete the project, the "try:" and "except:" command were helpful, and had to create an idea of what we wanted before we started. We had many difficulties, the first one is the crash when you put a letter when it asks for a number, when we put float() and then put a letter it would crash, so we had to use the "try:" and "except:" command. The second was getting the program run without going back steps when it was in the loop, the fix was to put several functions within functions to organize and read it correctly. The "try:" and "except:" command will be very useful in independent program development, it allows the bypass of crashes.